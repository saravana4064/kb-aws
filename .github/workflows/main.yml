name: Build and Push MCP Docker Image

on:
  push:
    branches:
      - main  # or your deployment branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    #- name: Configure AWS credentials
    #  uses: aws-actions/configure-aws-credentials@v2
     # with:
     #   aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
     #   aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
     #   aws-region: us-east-1

    #- name: Log in to Amazon ECR
    #  id: login-ecr
    #  uses: aws-actions/amazon-ecr-login@v2

    - name: Build Docker image
      run: |
        docker build -t mcp-server .
    - name: Run container and test endpoint
      run: |
        docker run -d -p 9000:8080 --name mcp-test mcp-server
        sleep 5  # give it time to start
        curl -XPOST "http://localhost:9000/2015-03-31/functions/function/invocations" \
             -H "Content-Type: application/json" \
             -d '{
                "httpMethod": "POST",
                "path": "/mcp",
                "headers": {
                  "Content-Type": "application/json"
                },
                "body": "{\"input\":{\"text\":\"Hello from GitHub Actions\"}}",
                "isBase64Encoded": false
              }'
        docker stop mcp-test
        docker rm mcp-test

   # - name: Tag Docker image
   #   run: |
   #     IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/mcp-server:latest
    #    docker tag mcp-server $IMAGE_URI

   # - name: Push Docker image to ECR
   #   run: |
    #    IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/mcp-server:latest
     #   docker push $IMAGE_URI
